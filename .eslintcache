[{"C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\index.js":"1","C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\App.js":"2","C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\components\\login\\Login.js":"3","C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\components\\chat\\ChatRoom.js":"4","C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\components\\singup\\SignUp.js":"5","C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\reducers\\index.js":"6","C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\reducers\\appReducer.js":"7","C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\types\\actionTypes.js":"8","C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\actions\\appActions.js":"9","C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\components\\chat\\input.js":"10","C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\components\\chat\\UserList.js":"11","C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\components\\chat\\Messages.js":"12","C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\components\\chat\\Message.js":"13","C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\components\\chat\\ModalGifs.js":"14"},{"size":611,"mtime":1611072159143,"results":"15","hashOfConfig":"16"},{"size":480,"mtime":1611021558768,"results":"17","hashOfConfig":"16"},{"size":2349,"mtime":1611100812087,"results":"18","hashOfConfig":"16"},{"size":2289,"mtime":1611100789384,"results":"19","hashOfConfig":"16"},{"size":2725,"mtime":1611100818808,"results":"20","hashOfConfig":"16"},{"size":137,"mtime":1611028588361,"results":"21","hashOfConfig":"16"},{"size":486,"mtime":1611094004044,"results":"22","hashOfConfig":"16"},{"size":87,"mtime":1611093805763,"results":"23","hashOfConfig":"16"},{"size":286,"mtime":1611094162456,"results":"24","hashOfConfig":"16"},{"size":1078,"mtime":1611095160349,"results":"25","hashOfConfig":"16"},{"size":425,"mtime":1611071211102,"results":"26","hashOfConfig":"16"},{"size":542,"mtime":1611096357368,"results":"27","hashOfConfig":"16"},{"size":1596,"mtime":1611095564078,"results":"28","hashOfConfig":"16"},{"size":801,"mtime":1611095249958,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1g74e8f",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},"C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\index.js",[],["62","63"],"C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\App.js",[],"C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\components\\login\\Login.js",[],"C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\components\\chat\\ChatRoom.js",["64"],"C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\components\\singup\\SignUp.js",[],"C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\reducers\\index.js",[],"C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\reducers\\appReducer.js",["65"],"import { SAVEUSER, SAVEGIF } from '../types/actionTypes';\r\nconst INITIAL_STATE = {\r\n\tcreatedAt: '',\r\n\texp: 0,\r\n\tfirstName: '',\r\n\tiat: 0,\r\n\tid: 0,\r\n\tlastName: '',\r\n\tnickName: '',\r\n\tupdatedAt: '',\r\n\turl_gif: '',\r\n};\r\nexport default (state = INITIAL_STATE, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SAVEUSER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload,\r\n\t\t\t};\r\n\t\tcase SAVEGIF:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\types\\actionTypes.js",[],"C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\actions\\appActions.js",[],"C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\components\\chat\\input.js",[],"C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\components\\chat\\UserList.js",[],"C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\components\\chat\\Messages.js",[],"C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\components\\chat\\Message.js",["66","67","68"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './styles/message.css';\r\n\r\nconst Message = ({ message: { text, user, date, type }, id }) => {\r\n\tlet isSentByCurrentUser = false;\r\n\tlet toDate = new Date(date).toLocaleString();\r\n\tif (id === user.id && type === 'text') {\r\n\t\treturn (\r\n\t\t\t<div className='messageContainer justifyEnd'>\r\n\t\t\t\t<p className='sentText pr-10'>\r\n\t\t\t\t\t{user.nickName}\r\n\t\t\t\t\t{toDate}\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className='messageBox backgroundBlue'>\r\n\t\t\t\t\t<p className='messageText colorWhite'>{text}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else if (id === user.id && type === 'gif') {\r\n\t\treturn (\r\n\t\t\t<div className='messageContainer justifyEnd'>\r\n\t\t\t\t<p className='sentText pr-10'>\r\n\t\t\t\t\t{user.nickName}\r\n\t\t\t\t\t{toDate}\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className='messageBox backgroundBlue'>\r\n\t\t\t\t\t<img src={text} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else if (id !== user.id && type === 'gif') {\r\n\t\treturn (\r\n\t\t\t<div className='messageContainer justifyStart'>\r\n\t\t\t\t<div className='messageBox backgroundLight'>\r\n\t\t\t\t\t<img src={text} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className='sentText pl-10 '>\r\n\t\t\t\t\t{user.nickName} {toDate}{' '}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className='messageContainer justifyStart'>\r\n\t\t\t\t<div className='messageBox backgroundLight'>\r\n\t\t\t\t\t<p className='messageText colorDark'>{text}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className='sentText pl-10 '>\r\n\t\t\t\t\t{user.nickName} {toDate}{' '}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\nconst mapStateToProps = (reducers) => {\r\n\treturn reducers.appReducer;\r\n};\r\nexport default connect(mapStateToProps)(Message);\r\n","C:\\Users\\Labrador\\Desktop\\Prueba\\client\\src\\components\\chat\\ModalGifs.js",["69","70"],"import React from 'react';\r\n\r\nimport { Modal, Row, Col } from 'react-bootstrap';\r\n\r\nconst ModalGifs = (props) => {\r\n\tconst sendGift = (e) => {};\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\tsize='lg'\r\n\t\t\tshow={props.show}\r\n\t\t\tonHide={() => props.setShow(false)}\r\n\t\t\taria-labelledby='example-modal-sizes-title-lg'>\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title id='example-modal-sizes-title-lg'>Gifs</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{props.gifs.map((gif) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Col md='3' className='mb-3'>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tclassName='w-100 h-100'\r\n\t\t\t\t\t\t\t\t\tsrc={gif.images.preview_gif.url}\r\n\t\t\t\t\t\t\t\t\tonClick={(e) => props.gifClick(e.target.src)}></img>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Row>\r\n\t\t\t</Modal.Body>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default ModalGifs;\r\n",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":42,"column":5,"nodeType":"77","endLine":42,"endColumn":15,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":13,"column":1,"nodeType":"81","endLine":29,"endColumn":3},{"ruleId":"82","severity":1,"message":"83","line":6,"column":6,"nodeType":"84","messageId":"85","endLine":6,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":28,"column":6,"nodeType":"88","endLine":28,"endColumn":24},{"ruleId":"86","severity":1,"message":"87","line":36,"column":6,"nodeType":"88","endLine":36,"endColumn":24},{"ruleId":"82","severity":1,"message":"89","line":6,"column":8,"nodeType":"84","messageId":"85","endLine":6,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":21,"column":9,"nodeType":"88","endLine":24,"endColumn":56},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'props', 'token', and 'user'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["92"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'isSentByCurrentUser' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'sendGift' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [ENDPOINT, history, props, token, user]",{"range":"95","text":"96"},[1172,1182],"[ENDPOINT, history, props, token, user]"]